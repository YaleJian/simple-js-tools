"use strict";(self.webpackChunksimple_js_tools_doc=self.webpackChunksimple_js_tools_doc||[]).push([[467],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=s.createContext({}),h=function(e){var t=s.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=h(e.components);return s.createElement(p.Provider,{value:t},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},u=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=h(n),u=r,f=l["".concat(p,".").concat(u)]||l[u]||c[u]||a;return n?s.createElement(f,o(o({ref:t},d),{},{components:n})):s.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:r,o[1]=i;for(var h=2;h<a;h++)o[h]=n[h];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2825:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>h});var s=n(7462),r=(n(7294),n(3905));const a={sidebar_position:3},o="XMLHttpRequest",i={unversionedId:"API/xhr/XMLHttpRequest",id:"API/xhr/XMLHttpRequest",title:"XMLHttpRequest",description:"\u5bf9\u6d4f\u89c8\u5668XMLHttpRequest\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002",source:"@site/document/API/xhr/XMLHttpRequest.md",sourceDirName:"API/xhr",slug:"/API/xhr/XMLHttpRequest",permalink:"/simple-js-tools/docs/API/xhr/XMLHttpRequest",draft:!1,editUrl:"https://github.com/YaleJian/simple-js-tools/document/API/xhr/XMLHttpRequest.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"apiSidebar",previous:{title:"\u8bf7\u6c42",permalink:"/simple-js-tools/docs/category/\u8bf7\u6c42"}},p={},h=[{value:"\u6a21\u62dfXMLHttpRequest\u5bf9\u8c61",id:"\u6a21\u62dfxmlhttprequest\u5bf9\u8c61",level:2}],d={toc:h},l="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,s.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"xmlhttprequest"},"XMLHttpRequest"),(0,r.kt)("p",null,"\u5bf9\u6d4f\u89c8\u5668XMLHttpRequest\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002"),(0,r.kt)("h2",{id:"\u6a21\u62dfxmlhttprequest\u5bf9\u8c61"},"\u6a21\u62dfXMLHttpRequest\u5bf9\u8c61"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// \u5907\u4efd\u539f\u751f XMLHttpRequest\nwindow._XMLHttpRequest = window.XMLHttpRequest\nwindow._ActiveXObject = window.ActiveXObject\n\n/*\n    PhantomJS\n    TypeError: \'[object EventConstructor]\' is not a constructor (evaluating \'new Event("readystatechange")\')\n\n    https://github.com/bluerail/twitter-bootstrap-rails-confirm/issues/18\n    https://github.com/ariya/phantomjs/issues/11289\n*/\ntry {\n    new window.Event(\'config\')\n} catch (exception) {\n    window.Event = function (type, bubbles, cancelable, detail) {\n        let event = document.createEvent(\'CustomEvent\') // MUST be \'CustomEvent\'\n        event.initCustomEvent(type, bubbles, cancelable, detail)\n        return event\n    }\n}\n\nlet XHR_STATES = {\n    // The object has been constructed.\n    UNSENT: 0,\n    // The open() method has been successfully invoked.\n    OPENED: 1,\n    // All redirects (if any) have been followed and all HTTP headers of the response have been received.\n    HEADERS_RECEIVED: 2,\n    // The response\'s body is being received.\n    LOADING: 3,\n    // The data transfer has been completed or something went wrong during the transfer (e.g. infinite redirects).\n    DONE: 4\n}\n\nlet XHR_EVENTS = \'readystatechange loadstart progress abort error load timeout loadend\'.split(\' \')\nlet XHR_REQUEST_PROPERTIES = \'timeout withCredentials\'.split(\' \')\nlet XHR_RESPONSE_PROPERTIES = \'readyState responseURL status statusText responseType response responseText responseXML\'.split(\' \')\n\n// https://github.com/trek/FakeXMLHttpRequest/blob/master/fake_xml_http_request.js#L32\nlet HTTP_STATUS_CODES = {\n    100: "Continue",\n    101: "Switching Protocols",\n    200: "OK",\n    201: "Created",\n    202: "Accepted",\n    203: "Non-Authoritative Information",\n    204: "No Content",\n    205: "Reset Content",\n    206: "Partial Content",\n    300: "Multiple Choice",\n    301: "Moved Permanently",\n    302: "Found",\n    303: "See Other",\n    304: "Not Modified",\n    305: "Use Proxy",\n    307: "Temporary Redirect",\n    400: "Bad Request",\n    401: "Unauthorized",\n    402: "Payment Required",\n    403: "Forbidden",\n    404: "Not Found",\n    405: "Method Not Allowed",\n    406: "Not Acceptable",\n    407: "Proxy Authentication Required",\n    408: "Request Timeout",\n    409: "Conflict",\n    410: "Gone",\n    411: "Length Required",\n    412: "Precondition Failed",\n    413: "Request Entity Too Large",\n    414: "Request-URI Too Long",\n    415: "Unsupported Media Type",\n    416: "Requested Range Not Satisfiable",\n    417: "Expectation Failed",\n    422: "Unprocessable Entity",\n    500: "Internal Server Error",\n    501: "Not Implemented",\n    502: "Bad Gateway",\n    503: "Service Unavailable",\n    504: "Gateway Timeout",\n    505: "HTTP Version Not Supported"\n}\n\n/*\n    MiniXMLHttpRequest\n*/\n\nfunction MiniXMLHttpRequest() {\n    // \u521d\u59cb\u5316 config \u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u50a8\u81ea\u5b9a\u4e49\u5c5e\u6027\n    this.config = {\n        events: {},\n        headers: {},\n    }\n\n    //\u8fd4\u56dehook\n    this.proxy = false\n    this.debug = false\n}\n\nobject.deepCopy(MiniXMLHttpRequest, XHR_STATES)\nobject.deepCopy(MiniXMLHttpRequest.prototype, XHR_STATES)\n\n// \u6807\u8bb0\u5f53\u524d\u5bf9\u8c61\u4e3a MiniXMLHttpRequest\nMiniXMLHttpRequest.prototype.mini = true\n\n// \u7981\u6b62\u4ee3\u7406\nMiniXMLHttpRequest.prototype.noProxy = false\n\n// \u521d\u59cb\u5316 Request \u76f8\u5173\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\nobject.deepCopy(MiniXMLHttpRequest.prototype, {\n    // https://xhr.spec.whatwg.org/#the-open()-method\n    // Sets the request method, request URL, and synchronous flag.\n    open: function (method, url, async, username, password) {\n        let that = this\n\n        object.deepCopy(this.config, {\n            method: method,\n            url: url,\n            async: typeof async === \'boolean\' ? async : true,\n            username: username,\n            password: password,\n            body: \'\',\n            options: {\n                url: url,\n                method: method,\n            }\n        })\n\n        function handle(event) {\n            // \u540c\u6b65\u5c5e\u6027 NativeXMLHttpRequest => MiniXMLHttpRequest\n            for (let i = 0; i < XHR_RESPONSE_PROPERTIES.length; i++) {\n                try {\n                    that[XHR_RESPONSE_PROPERTIES[i]] = xhr[XHR_RESPONSE_PROPERTIES[i]]\n                } catch (e) {\n                }\n            }\n            // \u89e6\u53d1 MiniXMLHttpRequest \u4e0a\u7684\u540c\u540d\u4e8b\u4ef6\n            that.dispatchEvent(new Event(event.type /*, false, false, that*/))\n        }\n\n        // \u7981\u6b62\u4ee3\u7406\u65f6\uff0c\u5219\u91c7\u7528\u539f\u751f XHR \u53d1\u9001\u8bf7\u6c42\u3002\n        if (this.noProxy || this.proxy) {\n            // \u521b\u5efa\u539f\u751f XHR \u5bf9\u8c61\uff0c\u8c03\u7528\u539f\u751f open()\uff0c\u76d1\u542c\u6240\u6709\u539f\u751f\u4e8b\u4ef6\n            let xhr = createNativeXMLHttpRequest()\n            this.config.xhr = xhr\n\n            // \u521d\u59cb\u5316\u6240\u6709\u4e8b\u4ef6\uff0c\u7528\u4e8e\u76d1\u542c\u539f\u751f XHR \u5bf9\u8c61\u7684\u4e8b\u4ef6\n            for (let i = 0; i < XHR_EVENTS.length; i++) {\n                xhr.addEventListener(XHR_EVENTS[i], handle)\n            }\n\n            if (username) {\n                xhr.open(method, url, async, username, password)\n            } else {\n                xhr.open(method, url, async)\n            }\n\n            // \u540c\u6b65\u5c5e\u6027 MiniXMLHttpRequest => NativeXMLHttpRequest\n            for (let j = 0; j < XHR_REQUEST_PROPERTIES.length; j++) {\n                try {\n                    xhr[XHR_REQUEST_PROPERTIES[j]] = that[XHR_REQUEST_PROPERTIES[j]]\n                } catch (e) {\n                }\n            }\n\n            return\n        }\n        // \u5f00\u59cb\u62e6\u622a XHR \u8bf7\u6c42\n        this.readyState = MiniXMLHttpRequest.OPENED\n        this.dispatchEvent(new Event(\'readystatechange\' /*, false, false, this*/))\n    },\n    // https://xhr.spec.whatwg.org/#the-setrequestheader()-method\n    // Combines a header in author request headers.\n    setRequestHeader: function (name, value) {\n        // \u539f\u751f XHR\n        if (this.noProxy || this.proxy) {\n            this.config.xhr.setRequestHeader(name, value)\n            return\n        }\n\n        // \u62e6\u622a XHR\n        let headers = this.config.headers\n        if (headers[name]) headers[name] += \',\' + value\n        else headers[name] = value\n    },\n    timeout: 0,\n    withCredentials: false,\n    upload: {},\n    // https://xhr.spec.whatwg.org/#the-send()-method\n    // Initiates the request.\n    send: function send(data) {\n        let that = this\n        this.config.body = data\n        this.config.timeout = this.timeout\n\n        // \u539f\u751f XHR\n        if (this.noProxy || this.proxy) {\n            this.config.xhr.send(data)\n            return\n        }\n\n        // \u62e6\u622a XHR\n\n        // X-Requested-With header\n        this.setRequestHeader(\'X-Requested-With\', \'MiniXMLHttpRequest\')\n\n        // loadstart The fetch initiates.\n        this.dispatchEvent(new Event(\'loadstart\' /*, false, false, this*/))\n\n        that.readyState = MiniXMLHttpRequest.HEADERS_RECEIVED\n        that.dispatchEvent(new Event(\'readystatechange\' /*, false, false, that*/))\n        that.readyState = MiniXMLHttpRequest.LOADING\n        that.dispatchEvent(new Event(\'readystatechange\' /*, false, false, that*/))\n\n\n        if (MiniXMLHttpRequest.proxy) {\n            if (MiniXMLHttpRequest.debug) console.log("[XHR] \u8bf7\u6c42xhr:", that.config)\n            let doProxy = MiniXMLHttpRequest.proxy(that)\n            if(compare.isPromise(doProxy)){\n                doProxy.then(data => {\n                    done(data)\n                }).catch(e => {\n                    done(e, 502)\n                })\n            }\n        } else {\n            console.warn("[tools-xhr] proxy param is not a Promise")\n        }\n\n        function done(data, status) {\n            if (MiniXMLHttpRequest.debug) console.log("[XHR] \u54cd\u5e94data:", data)\n\n            if (data.responseHeaders) that.responseHeaders = data.responseHeaders\n            if (data.response) that.response = data.response || \'\'\n            if (typeof data.response === "string") that.responseText = data.response\n            if (data.responseType) that.responseType = data.responseType\n            if (data.responseURL) that.responseURL = data.responseURL\n            if (data.responseXML) that.responseXML = data.responseXML\n            that.status = data.status || 200\n            that.statusText = data.statusText || HTTP_STATUS_CODES[that.status]\n            if (data.timeout) that.timeout = data.timeout\n            if (data.withCredentials) that.withCredentials = data.withCredentials\n\n            that.readyState = MiniXMLHttpRequest.DONE\n            that.dispatchEvent(new Event(\'readystatechange\' /*, false, false, that*/))\n            that.dispatchEvent(new Event(\'load\' /*, false, false, that*/));\n            that.dispatchEvent(new Event(\'loadend\' /*, false, false, that*/));\n        }\n    },\n    // https://xhr.spec.whatwg.org/#the-abort()-method\n    // Cancels any network activity.\n    abort: function abort() {\n        // \u539f\u751f XHR\n        if (this.noProxy) {\n            this.config.xhr.abort()\n            return\n        }\n\n        // \u62e6\u622a XHR\n        this.readyState = MiniXMLHttpRequest.UNSENT\n        this.dispatchEvent(new Event(\'abort\', false, false, this))\n        this.dispatchEvent(new Event(\'error\', false, false, this))\n    }\n})\n\n// \u521d\u59cb\u5316 Response \u76f8\u5173\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\nobject.deepCopy(MiniXMLHttpRequest.prototype, {\n    status: MiniXMLHttpRequest.UNSENT,\n    statusText: \'\',\n    // https://xhr.spec.whatwg.org/#the-getresponseheader()-method\n    getResponseHeader: function (name) {\n        // \u539f\u751f XHR\n        if (this.noProxy || this.proxy) {\n            return this.config.xhr.getResponseHeader(name)\n        }\n\n        // \u62e6\u622a XHR\n        return this.responseHeaders[name.toLowerCase()]\n    },\n    // https://xhr.spec.whatwg.org/#the-getallresponseheaders()-method\n    // http://www.utf8-chartable.de/\n    getAllResponseHeaders: function () {\n        // \u539f\u751f XHR\n        if (this.noProxy || this.proxy) {\n            return this.config.xhr.getAllResponseHeaders()\n        }\n\n        // \u62e6\u622a XHR\n        let responseHeaders = this.responseHeaders\n        let headers = \'\'\n        for (let h in responseHeaders) {\n            if (!responseHeaders.hasOwnProperty(h)) continue\n            headers += h + \': \' + responseHeaders[h] + \'\\r\\n\'\n        }\n        return headers\n    },\n    overrideMimeType: function ( /*mime*/) {\n    },\n    responseHeaders: {},\n    responseURL: \'\',\n    responseType: \'\', // \'\', \'text\', \'arraybuffer\', \'blob\', \'document\', \'json\'\n    response: null,\n    responseText: \'\',\n    responseXML: null\n})\n\n// EventTarget\nobject.deepCopy(MiniXMLHttpRequest.prototype, {\n    addEventListener: function addEventListener(type, handle) {\n        let events = this.config.events\n        if (!events[type]) events[type] = []\n        events[type].push(handle)\n    },\n    removeEventListener: function removeEventListener(type, handle) {\n        let handles = this.config.events[type] || []\n        for (let i = 0; i < handles.length; i++) {\n            if (handles[i] === handle) {\n                handles.splice(i--, 1)\n            }\n        }\n    },\n    dispatchEvent: function dispatchEvent(event) {\n        let handles = this.config.events[event.type] || []\n        for (let i = 0; i < handles.length; i++) {\n            handles[i].call(this, event)\n        }\n\n        let ontype = \'on\' + event.type\n        if (this[ontype]) this[ontype](event)\n    }\n})\n\n// Inspired by jQuery\nfunction createNativeXMLHttpRequest() {\n    let isLocal = function () {\n        let rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/\n        let rurl = /^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/\n        let ajaxLocation = location.href\n        let ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || []\n        return rlocalProtocol.test(ajaxLocParts[1])\n    }()\n\n    return window.ActiveXObject ?\n        (!isLocal && createStandardXHR() || createActiveXHR()) : createStandardXHR()\n\n    function createStandardXHR() {\n        try {\n            return new window._XMLHttpRequest();\n        } catch (e) {\n        }\n    }\n\n    function createActiveXHR() {\n        try {\n            return new window._ActiveXObject("Microsoft.XMLHTTP");\n        } catch (e) {\n        }\n    }\n}\n\nexport default MiniXMLHttpRequest\n')))}c.isMDXComponent=!0}}]);